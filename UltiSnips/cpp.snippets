# ––– Boilerplates –––

snippet main "A boilerplate for USACO problems" b
// ––– ${1:`!v strftime("%Y")`} ${2:`!v strftime("%B")`}: ${3:Bronze} #${4:1} –––

#include <bits/stdc++.h>

using namespace std;

int main()
{
  int n;
  cin >> n;

  $0

  int m;
  cout << m;
}
endsnippet

snippet mainold "A boilerplate for old USACO problems that need fileio" b
// ––– ${1:2020} ${2:January}: ${3:Bronze} #${4:1} –––

#include <bits/stdc++.h>

using namespace std;

int main()
{
  /* ifstream cin("main.in", "r", stdin); */
  /* ofstream cout("main.out", "w", stdout); */

  int n;
  cin >> n;

  $0

  int m;
  cout << m;
}
endsnippet


# ––– Input + Output –––

snippet in "Input values" b
for (int ${1:i} = 0; $1 < ${2:n}; $1++) {
  ${3:int} ${4:elt};
  cin >> $4;
  $0
}
endsnippet

snippet inarr "Input an array" b
${1:int} ${2:arr}[${3:n}];
for (int ${4:i} = 0; $4 < $3; $4++) {
  $1 ${5:elt};
  cin >> $5;
  $2[$4] = $5;
}$0
endsnippet

snippet inpairs "Input pairs" b
for (int ${1:i} = 0; $1 < $2; $2++) {
  ${3:int} ${4:a};
  ${5:int} ${6:b};
  cin >> $4 >> $6;
  $0
}
endsnippet

snippet inarrpairs "Input an array of pairs" b
pair<${1:int}, ${2:int}> ${3:arr}[${4:n}];
for (int ${5:i} = 0; $5 < $4; $5++) {
  ${3:int} ${4:a};
  ${5:int} ${6:b};
  cin >> a >> b;
  $3[$5].first = a;
  $3[$5].second = b;
}$0
endsnippet

snippet outarr "Output an array" b
cout << ${1:arr}[0];
for (int ${3:i} = 1; $3 < ${2:n}; $3++) {
  cout << endl << $1[$3];
}$0
endsnippet


# ––– For Loops –––

snippet for "A for loop" b
for (int ${1:i} = ${2:0}; $1 < ${3:n}; $1++) {
  $0
}
endsnippet

snippet forin "A for loop that loops through an array" b
for (${1:int} ${2:elt} : ${3:arr}) {
  $0
}
endsnippet

snippet forn "A for loop that loops through an array using a predefined variable" b
for (int ${1:i} = ${2:0}; $1 < ${3:n}; $1++) {
  ${4:int} ${5:elt} = ${6:arr}[$1];
  $0
}
endsnippet


# ––– Basic Statements –––

snippet if "An if statement" b
if (${1:condition}) {
  $0
}
endsnippet

snippet while "An if statement" b
while (${1:condition}) {
  $0
}
endsnippet

snippet switch "A switch case" b
switch (${1:var}) {
  case ${2:value}:
    $3
    break;
  $0
}
endsnippet

snippet case "A single case in a switch case" b
case ${1:value}:
  $0
  break;
endsnippet

snippet default "The default case in a switch case" b
default:
  $0
  break;
endsnippet


# ––– Other –––

snippet #inc "An include statement" b
#include <${1:bits/stdc++.h}>$0
endsnippet

snippet inc "An include statement" b
#include <${1:bits/stdc++.h}>$0
endsnippet

snippet mac "A macro" b
#define ${1:NAME} ${2:VALUE}$0
endsnippet

snippet def "A macro" b
#define ${1:NAME} ${2:VALUE}$0
endsnippet

snippet alias "A type alias" b
using ${1:SHORT} = ${2:LONG};$0
endsnippet

snippet range "Define a range of integers" b
int ${1:arr}[${2:n}];
for (int ${3:i} = 0; $3 < $2; $3++) {
  $1[$3] = $3 + 1;
}$0
endsnippet
